;/*******************************************************
;Ahmad Asadi 99463107 Final Project
;*******************************************************/
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <stdlib.h>
;#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;unsigned int read_adc(unsigned char adc_input){
; 0000 000A unsigned int read_adc(unsigned char adc_input){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000B     ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000000F VOL: 0
;	adc_input -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 000C     delay_us(10);
;PCODE: $00000013 VOL: 0
; 0000 000D     ADCSRA|=(1<<ADSC);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 000E     while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 000F     ADCSRA|=(1<<ADIF);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0010     return ADCW;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0011 }
;PCODE: $00000021 VOL: 0
;
;void T0Delay () {
; 0000 0013 void T0Delay () {
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0014     TCNT0 = 128;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0015     TCCR0 = 0x05;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0016     while ((TIFR&0x1)==0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0017     TCCR0 = 0;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0018     TIFR = 0x1;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0019 }
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;
;int pressed1 (int press, int num, int key) {
; 0000 001B int pressed1 (int press, int num, int key) {
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 001C     if (press == 0) {
;PCODE: $00000037 VOL: 0
;	press -> Y+4
;	num -> Y+2
;	key -> Y+0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 001D         num = num * 10;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 001E         num = num + key;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 001F     }
; 0000 0020     return num;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0021 }
;PCODE: $00000047 VOL: 0
;
;int pressed2 (int press, int num, int key) {
; 0000 0023 int pressed2 (int press, int num, int key) {
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0024     if (press == 1) {
;PCODE: $0000004A VOL: 0
;	press -> Y+4
;	num -> Y+2
;	key -> Y+0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0025         num = num * 10;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0026         num = num + key;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0027     }
; 0000 0028     return num;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0029 }
;PCODE: $0000005A VOL: 0
;
;int arithmatic (int numb1, int operation2, int numb2) {
; 0000 002B int arithmatic (int numb1, int operation2, int numb2) {
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 002C     int result = 0;
; 0000 002D     if (operation2 == 1){
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;	numb1 -> Y+6
;	operation2 -> Y+4
;	numb2 -> Y+2
;	result -> R16,R17
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 002E         result = numb1 / numb2;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 002F     }
; 0000 0030     if (operation2 == 2){
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0031         result = numb1 * numb2;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0032     }
; 0000 0033     if (operation2 == 3){
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0034         result = numb1 - numb2;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0035     }
; 0000 0036     if (operation2 == 4){
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0037         result = numb1 + numb2;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0038     }
; 0000 0039     return result;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 003A }
;PCODE: $00000089 VOL: 0
;
;char convert (int number) {
; 0000 003C char convert (int number) {
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 003D     if (number == 0) {
;PCODE: $0000008C VOL: 0
;	number -> Y+0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 003E         return '0';
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 003F     }
; 0000 0040     if (number == 1) {
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0041         return '1';
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0042     }
; 0000 0043     if (number == 2) {
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0044         return '2';
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0045     }
; 0000 0046     if (number == 3) {
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0047         return '3';
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0048     }
; 0000 0049     if (number == 4) {
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 004A         return '4';
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 004B     }
; 0000 004C     if (number == 5) {
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 004D         return '5';
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 004E     }
; 0000 004F     if (number == 6) {
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0050         return '6';
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0051     }
; 0000 0052     if (number == 7) {
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0053         return '7';
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0054     }
; 0000 0055     if (number == 8) {
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0056         return '8';
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0057     }
; 0000 0058     if (number == 9) {
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0059         return '9';
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 005A     }
; 0000 005B     return '&';
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 005C }
;PCODE: $000000D6 VOL: 0
;
;void printlcd (int result) {
; 0000 005E void printlcd (int result) {
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 005F     int digit[5];
; 0000 0060     int i = 0;
; 0000 0061     int j = 0;
; 0000 0062     char chary= '*';
; 0000 0063     while (result > 0) {
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;	result -> Y+16
;	digit -> Y+6
;	i -> R16,R17
;	j -> R18,R19
;	chary -> R21
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0064         digit[i] = result % 10;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0065         i = i + 1;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0066         result = result / 10;
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0067     }
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0068     for(j = i; j > 0; j--) {
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 0069         chary = convert(digit[j - 1]);
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 006A         lcd_putchar(chary);
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 006B     }
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 006C }
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;
;void main(void){
; 0000 006E void main(void){
;PCODE: $00000114 VOL: 0
; 0000 006F     int exp_pressed = 0;
; 0000 0070     int num1 = 0;
; 0000 0071     int num2 = 0;
; 0000 0072     int operation = 0;
; 0000 0073     int res = 0;
; 0000 0074 
; 0000 0075     int round = 0;
; 0000 0076     int lcdx = 0;
; 0000 0077     int x = 0;
; 0000 0078     char out[6];
; 0000 0079 
; 0000 007A     DDRA = 0b11111110; // pin 0 is input
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;	exp_pressed -> R16,R17
;	num1 -> R18,R19
;	num2 -> R20,R21
;	operation -> Y+14
;	res -> Y+12
;	round -> Y+10
;	lcdx -> Y+8
;	x -> Y+6
;	out -> Y+0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 007B     DDRC = 0b11111111; // all output for lcd
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 007C     DDRD = 0b00001111; // first 4 pin is output and other are input
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 007D 
; 0000 007E     PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 007F     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 0080     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 0081     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0082     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0083 
; 0000 0084     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0085     TCNT0=0x00;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 0086     OCR0=0x00;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 0087 
; 0000 0088     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 0089     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 008A     TCNT1H=0x00;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 008B     TCNT1L=0x00;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 008C     ICR1H=0x00;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 008D     ICR1L=0x00;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 008E     OCR1AH=0x00;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 008F     OCR1AL=0x00;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 0090     OCR1BH=0x00;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 0091     OCR1BL=0x00;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0092 
; 0000 0093     ASSR=0<<AS2;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0094     TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 0095     TCNT2=0x00;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0096     OCR2=0x00;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0097 
; 0000 0098     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 0099 
; 0000 009A     MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 009B     MCUCSR=(0<<ISC2);
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 009C 
; 0000 009D     UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 009E 
; 0000 009F     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00A0 
; 0000 00A1     ADMUX=ADC_VREF_TYPE;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00A2     ADCSRA=(1<<ADEN) | (0<<ADSC) | (1<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00A3     SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 00A4 
; 0000 00A5     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00A6 
; 0000 00A7     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00A8 
; 0000 00A9     lcd_init(16);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00AA 
; 0000 00AB     while (1) {
;PCODE: $00000168 VOL: 0
; 0000 00AC         PORTD = 0b00000001;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00AD         if (PIND.4==1) {
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00AE             num1 = pressed1 (exp_pressed, num1, 7);
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 00AF             num2 = pressed2 (exp_pressed, num2, 7);
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00B0             lcd_putchar('7');
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00B1             lcdx = lcdx + 1;
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00B2         }
; 0000 00B3         if (PIND.5==1) {
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00B4             num1 = pressed1 (exp_pressed, num1, 8);
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00B5             num2 = pressed2 (exp_pressed, num2, 8);
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00B6             lcd_putchar('8');
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 00B7             lcdx = lcdx + 1;
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00B8         }
; 0000 00B9         if (PIND.6==1) {
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 00BA             num1 = pressed1 (exp_pressed, num1, 9);
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00BB             num2 = pressed2 (exp_pressed, num2, 9);
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00BC             lcd_putchar('9');
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00BD             lcdx = lcdx + 1;
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 00BE         }
; 0000 00BF         if (PIND.7==1) {
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 00C0             operation = 1;
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00C1             exp_pressed = 1;
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 00C2             lcd_putchar('/');
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 00C3             lcdx = lcdx + 1;
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00C4         }
; 0000 00C5         //delay_ms(20);
; 0000 00C6         T0Delay();
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00C7         PORTD = 0b00000010;
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00C8         if (PIND.4==1) {
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00C9             num1 = pressed1 (exp_pressed, num1, 4);
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 00CA             num2 = pressed2 (exp_pressed, num2, 4);
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 00CB             lcd_putchar('4');
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 00CC             lcdx = lcdx + 1;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 00CD         }
; 0000 00CE         if (PIND.5==1) {
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 00CF             num1 = pressed1 (exp_pressed, num1, 5);
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 00D0             num2 = pressed2 (exp_pressed, num2, 5);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 00D1             lcd_putchar('5');
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 00D2             lcdx = lcdx + 1;
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 00D3         }
; 0000 00D4         if (PIND.6==1) {
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 00D5             num1 = pressed1 (exp_pressed, num1, 6);
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 00D6             num2 = pressed2 (exp_pressed, num2, 6);
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 00D7             lcd_putchar('6');
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 00D8             lcdx = lcdx + 1;
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 00D9         }
; 0000 00DA         if (PIND.7==1) {
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 00DB             operation = 2;
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 00DC             exp_pressed = 1;
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 00DD             lcd_putchar('*');
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 00DE             lcdx = lcdx + 1;
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 00DF         }
; 0000 00E0         PORTD = 0b00000100;
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 00E1         //delay_ms(20);
; 0000 00E2         T0Delay();
;PCODE: $00000208 VOL: 0
; 0000 00E3         if (PIND.4==1) {
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 00E4             num1 = pressed1 (exp_pressed, num1, 1);
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 00E5             num2 = pressed2 (exp_pressed, num2, 1);
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 00E6             lcd_putchar('1');
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 00E7             lcdx = lcdx + 1;
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 00E8         }
; 0000 00E9         if (PIND.5==1) {
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 00EA             num1 = pressed1 (exp_pressed, num1, 2);
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 00EB             num2 = pressed2 (exp_pressed, num2, 2);
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 00EC             lcd_putchar('2');
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 00ED             lcdx = lcdx + 1;
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 00EE         }
; 0000 00EF         if (PIND.6==1) {
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 00F0             num1 = pressed1 (exp_pressed, num1, 3);
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 00F1             num2 = pressed2 (exp_pressed, num2, 3);
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 00F2             lcd_putchar('3');
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 00F3             lcdx = lcdx + 1;
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 00F4         }
; 0000 00F5         if (PIND.7==1) {
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 00F6             operation = 3;
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 00F7             exp_pressed = 1;
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 00F8             lcd_putchar('-');
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 00F9             lcdx = lcdx + 1;
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 00FA         }
; 0000 00FB         PORTD = 0b00001000;
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 00FC         //delay_ms(20);
; 0000 00FD         T0Delay();
;PCODE: $00000257 VOL: 0
; 0000 00FE         if (PIND.4==1) {
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 00FF             exp_pressed = 0;
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 0100             num1 = 0;
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
; 0000 0101             num2 = 0;
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 0102             operation = 0;
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 0103             res = 0;
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
; 0000 0104             lcd_clear();
;PCODE: $00000265 VOL: 0
; 0000 0105             lcdx = 0;
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
; 0000 0106             x = read_adc(0);
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
; 0000 0107             x = x/4;
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 0108             itoa(x, out);
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
; 0000 0109             out[2] = '.';
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0000 010A             out[3] = 'C';
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 010B             lcd_gotoxy(0, 1);
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0000 010C             lcd_puts(out);
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
; 0000 010D             lcd_gotoxy(lcdx, 0);
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 010E         }
; 0000 010F         if (PIND.5==1) {
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
; 0000 0110             num1 = pressed1 (exp_pressed, num1, 0);
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 0111             num2 = pressed2 (exp_pressed, num2, 0);
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 0112             lcd_putchar('0');
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
; 0000 0113             lcdx = lcdx + 1;
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 0114         }
; 0000 0115         if (PIND.6==1) {
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 0116             res = arithmatic (num1, operation, num2);
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 0117             lcd_putchar('=');
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0000 0118             printlcd(res);
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 0119             lcdx = lcdx + 1;
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0000 011A         }
; 0000 011B         if (PIND.7==1) {
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
; 0000 011C             operation = 4;
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 011D             exp_pressed = 1;
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0000 011E             lcd_putchar('+');
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 011F             lcdx = lcdx + 1;
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 0120         }
; 0000 0121         //delay_ms(20);
; 0000 0122         T0Delay();
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 0123         round = round + 1;
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 0124         if (round == 10) {
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 0125             round = 0;
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
; 0000 0126             x = read_adc(0);
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 0127             x = x/4;
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 0128             itoa(x, out);
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 0129             out[2] = '.';
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
; 0000 012A             out[3] = 'C';
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 012B             lcd_gotoxy(0, 1);
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 012C             lcd_puts(out);
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
; 0000 012D             lcd_gotoxy(lcdx, 0);
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
; 0000 012E         }
; 0000 012F     }
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
; 0000 0130 
; 0000 0131 }
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
